/**Implements a graphical crosshair used to select a cell. */
class Crosshair {
    field int x, y;

    /**Constructs a new crosshair in given coordinates. 
     * The coordinates describe crosshair tile on 24x16 game board, indexed from 0. 
     */
    constructor Crosshair new(int cx, int cy) {
        let x = cx;
        let y = cy;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /**Draws the crosshair. */
    method void draw() {
        do Screen.setColor(true);
        do drawCrosshair((8+x)+(32*16*y));
        return;
    }

    /**Erases the crosshair. */
    method void erase() {
        do Screen.setColor(false);
        do eraseCrosshair(128+(x*16),(y*16));
        return;
    }

    /**Draws the crosshair sprite. */
    method void drawCrosshair(int location) {
        var int memAddress;
        let memAddress = 16384+location;
	    do Memory.poke(memAddress+0, -961);
	    do Memory.poke(memAddress+32, -961);
	    do Memory.poke(memAddress+64, -16381);
	    do Memory.poke(memAddress+96, -16381);
	    do Memory.poke(memAddress+128, -14317);
	    do Memory.poke(memAddress+160, -15325);
	    do Memory.poke(memAddress+192, 576);
	    do Memory.poke(memAddress+224, 384);
	    do Memory.poke(memAddress+256, 384);
	    do Memory.poke(memAddress+288, 576);
	    do Memory.poke(memAddress+320, -15325);
	    do Memory.poke(memAddress+352, -14317);
	    do Memory.poke(memAddress+384, -16381);
	    do Memory.poke(memAddress+416, -16381);
	    do Memory.poke(memAddress+448, -961);
	    do Memory.poke(memAddress+480, -961);
        return;
    }

    method void eraseCrosshair(int x, int y) {
        do Screen.drawRectangle(x, y, x+15, y+15);
        return;

    }

    /**Moves crosshair one tile up. */
    method void moveUp() {
        do erase();
        if (y>0) { let y = y-1; }
        else     { let y = 15; }
        do draw();
        return;
    }

    /**Moves crosshair one tile down. */
    method void moveDown() {
        do erase();
        if (y<15) { let y = y+1; }
        else      { let y = 0; }
        do draw();
        return;
    }

    /**Moves crosshair one tile left. */
    method void moveLeft() {
        do erase();
        if (x>0) { let x = x-1; }
        else     { let x = 23; }
        do draw();
        return;
    }

    /**Moves crosshair one tile right. */
    method void moveRight() {
        do erase();
        if (x<23) { let x = x+1; }
        else      { let x = 0; }
        do draw();
        return;
    }
}
